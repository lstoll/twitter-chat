<?xml version="1.0" encoding="UTF-8"?>
<project name="ScalaAntTest" default="build" basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <property file="build.properties"/>

  <property
    name="build.dir"
    value="${basedir}/build"
     />

  <path id="sources">
    <pathelement location="${basedir}/app" />
    <pathelement location="${basedir}/test" />
  </path>

  <target name="init">
    <property
        name="scala-library.jar"
        value="${scala.home}/lib/scala-library.jar"
        />

    <path id="build.classpath">
      <pathelement location="${scala-library.jar}"   />
      <pathelement location="${build.dir}"   />
      <!-- appengine libs -->
      <fileset dir="${appengine.home}">
        <include name="libexec/lib/**/*.jar"/>
      </fileset>

      <!-- project libs -->
      <fileset dir="${basedir}/lib">
        <include name="**/*.jar" />
      </fileset>

      <!-- play libs & modules -->
      <fileset dir="${play.home}">
        <include name="framework/**/*.jar"/>
        <include name="modules/scala-0.3/lib/**/*.jar"/>
        <include name="modules/objectify-1.0/lib/**/*.jar"/>
        <include name="modules/gae-1.0.2/lib/play-gae*.jar"/>
      </fileset>
    </path>

    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${scala.home}/lib/scala-compiler.jar"   />
        <pathelement location="${scala-library.jar}"   />
      </classpath>
    </taskdef>
  </target>

  <target name="build" depends="init">
    <mkdir dir="${build.dir}"   />
    <scalac srcref="sources"
            destdir="${build.dir}"
            failonerror="false"
            classpathref="build.classpath">
      <include name="**/*.scala"   />
      <exclude name="forget/**/*.scala"   />
    </scalac>
  </target>

  <!-- Used for Flymake -->
  <target name="check-syntax" depends="init">
    <mkdir dir="${build.dir}"   />
    <scalac sourcepathref="sources"
            srcdir="${basedir}"
            destdir="${build.dir}"
            failonerror="false"
            classpathref="build.classpath">
      <include name="${CHK_SOURCES}" />
    </scalac>
  </target>

  <!-- IVY -->
  <ivy:settings file="ivy-settings.xml"/>
  <target name="resolve" depends="install-ivy"
          description="--> retreive dependencies with ivy">
    <ivy:retrieve/>
  </target>

  <target name="clean-lib" description="--> clean the project">
    <delete includeemptydirs="true">
      <fileset dir="${basedir}/lib" includes="**/*"/>
    </delete>    
  </target>

  <target name="clean-cache" depends="install-ivy"
          description="--> clean the ivy cache">
    <ivy:cleancache />
  </target>

  <!-- IVY self install -->
  <property name="ivy.install.version" value="2.1.0-rc2" />
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    
  <target name="download-ivy" unless="offline">

    <mkdir dir="${ivy.jar.dir}"/>
    <!-- download Ivy from web site so that it can be used even without any special installation -->
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
         dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>
  
  <target name="install-ivy" depends="download-ivy">
    <!-- try to load ivy here from ivy home, in case the user has not already dropped
         it into ant's lib dir (note that the latter copy will always take precedence).
         We will not fail as long as local lib dir exists (it may be empty) and
         ivy is in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
      
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>
  
</project>
